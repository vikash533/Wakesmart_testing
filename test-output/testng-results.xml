<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="16" passed="15" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-05-03T18:46:19 IST" name="Suite" finished-at="2023-05-03T18:47:40 IST" duration-ms="81156">
    <groups>
      <group name="Smoke">
        <method signature="WSLoginPageTest.colorOfLoginButton()[pri:3, instance:com.wakesmart.testcases.WSLoginPageTest@2766ca9d]" name="colorOfLoginButton" class="com.wakesmart.testcases.WSLoginPageTest"/>
        <method signature="WSLoginPageTest.validUserLogin()[pri:9, instance:com.wakesmart.testcases.WSLoginPageTest@2766ca9d]" name="validUserLogin" class="com.wakesmart.testcases.WSLoginPageTest"/>
        <method signature="WSLoginPageTest.userLogout()[pri:11, instance:com.wakesmart.testcases.WSLoginPageTest@2766ca9d]" name="userLogout" class="com.wakesmart.testcases.WSLoginPageTest"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2023-05-03T18:46:19 IST" name="WakeSmart" finished-at="2023-05-03T18:47:40 IST" duration-ms="81156">
      <class name="com.wakesmart.testcases.WSManagementPoliciesTest">
        <test-method is-config="true" signature="browserLaunch()[pri:0, instance:com.wakesmart.testcases.WSManagementPoliciesTest@676cf48]" started-at="2023-05-03T18:46:19 IST" name="browserLaunch" finished-at="2023-05-03T18:46:46 IST" duration-ms="27262" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserLaunch -->
        <test-method signature="managementPolicies()[pri:1, instance:com.wakesmart.testcases.WSManagementPoliciesTest@676cf48]" started-at="2023-05-03T18:46:46 IST" name="managementPolicies" finished-at="2023-05-03T18:47:40 IST" duration-ms="53818" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- managementPolicies -->
      </class> <!-- com.wakesmart.testcases.WSManagementPoliciesTest -->
      <class name="com.wakesmart.testcases.WSLoginPageTest">
        <test-method is-config="true" signature="browserLaunch()[pri:0, instance:com.wakesmart.testcases.WSLoginPageTest@2766ca9d]" started-at="2023-05-03T18:46:19 IST" name="browserLaunch" finished-at="2023-05-03T18:46:44 IST" duration-ms="25251" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserLaunch -->
        <test-method signature="getTitle()[pri:1, instance:com.wakesmart.testcases.WSLoginPageTest@2766ca9d]" started-at="2023-05-03T18:46:44 IST" name="getTitle" finished-at="2023-05-03T18:46:45 IST" duration-ms="1306" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getTitle -->
        <test-method signature="colorOfForm()[pri:2, instance:com.wakesmart.testcases.WSLoginPageTest@2766ca9d]" started-at="2023-05-03T18:46:45 IST" name="colorOfForm" finished-at="2023-05-03T18:46:47 IST" duration-ms="1559" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- colorOfForm -->
        <test-method signature="colorOfLoginButton()[pri:3, instance:com.wakesmart.testcases.WSLoginPageTest@2766ca9d]" started-at="2023-05-03T18:46:47 IST" name="colorOfLoginButton" finished-at="2023-05-03T18:46:48 IST" duration-ms="706" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- colorOfLoginButton -->
        <test-method signature="invalidUserName_ValidPasswordLogin()[pri:4, instance:com.wakesmart.testcases.WSLoginPageTest@2766ca9d]" started-at="2023-05-03T18:46:48 IST" name="invalidUserName_ValidPasswordLogin" finished-at="2023-05-03T18:47:02 IST" duration-ms="14075" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidUserName_ValidPasswordLogin -->
        <test-method signature="validUserName_InvalidPasswordLogin()[pri:5, instance:com.wakesmart.testcases.WSLoginPageTest@2766ca9d]" started-at="2023-05-03T18:47:02 IST" name="validUserName_InvalidPasswordLogin" finished-at="2023-05-03T18:47:09 IST" duration-ms="7121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validUserName_InvalidPasswordLogin -->
        <test-method signature="inValidUserName_InvalidPasswordLogin()[pri:6, instance:com.wakesmart.testcases.WSLoginPageTest@2766ca9d]" started-at="2023-05-03T18:47:09 IST" name="inValidUserName_InvalidPasswordLogin" finished-at="2023-05-03T18:47:15 IST" duration-ms="6523" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inValidUserName_InvalidPasswordLogin -->
        <test-method signature="empty_Credential_Login()[pri:7, instance:com.wakesmart.testcases.WSLoginPageTest@2766ca9d]" started-at="2023-05-03T18:47:15 IST" name="empty_Credential_Login" finished-at="2023-05-03T18:47:17 IST" duration-ms="1821" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- empty_Credential_Login -->
        <test-method signature="passwordVisibilityOnDOM()[pri:8, instance:com.wakesmart.testcases.WSLoginPageTest@2766ca9d]" started-at="2023-05-03T18:47:17 IST" name="passwordVisibilityOnDOM" finished-at="2023-05-03T18:47:18 IST" duration-ms="541" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Password is visible on the DOM= did not expect [invalidPW] but found [invalidPW]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Password is visible on the DOM= did not expect [invalidPW] but found [invalidPW]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at com.wakesmart.testcases.WSLoginPageTest.passwordVisibilityOnDOM(WSLoginPageTest.java:148)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passwordVisibilityOnDOM -->
        <test-method signature="validUserLogin()[pri:9, instance:com.wakesmart.testcases.WSLoginPageTest@2766ca9d]" started-at="2023-05-03T18:47:18 IST" name="validUserLogin" finished-at="2023-05-03T18:47:25 IST" duration-ms="6539" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validUserLogin -->
        <test-method signature="URLVerification()[pri:10, instance:com.wakesmart.testcases.WSLoginPageTest@2766ca9d]" started-at="2023-05-03T18:47:25 IST" name="URLVerification" finished-at="2023-05-03T18:47:25 IST" duration-ms="42" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- URLVerification -->
        <test-method signature="userLogout()[pri:11, instance:com.wakesmart.testcases.WSLoginPageTest@2766ca9d]" started-at="2023-05-03T18:47:25 IST" name="userLogout" finished-at="2023-05-03T18:47:28 IST" depends-on-methods="com.wakesmart.testcases.WSLoginPageTest.validUserLogin" duration-ms="2710" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLogout -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.wakesmart.testcases.WSLoginPageTest@2766ca9d]" started-at="2023-05-03T18:47:28 IST" name="tearDown" finished-at="2023-05-03T18:47:30 IST" duration-ms="2509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.wakesmart.testcases.WSLoginPageTest -->
      <class name="com.wakesmart.testcases.WSAutomationGroupRulesTest">
        <test-method is-config="true" signature="browserLaunch()[pri:0, instance:com.wakesmart.testcases.WSAutomationGroupRulesTest@1c481ff2]" started-at="2023-05-03T18:46:19 IST" name="browserLaunch" finished-at="2023-05-03T18:46:43 IST" duration-ms="24512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserLaunch -->
        <test-method signature="newAutomationGroupRules()[pri:1, instance:com.wakesmart.testcases.WSAutomationGroupRulesTest@1c481ff2]" started-at="2023-05-03T18:46:43 IST" name="newAutomationGroupRules" finished-at="2023-05-03T18:47:26 IST" duration-ms="43013" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newAutomationGroupRules -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.wakesmart.testcases.WSAutomationGroupRulesTest@1c481ff2]" started-at="2023-05-03T18:47:26 IST" name="tearDown" finished-at="2023-05-03T18:47:28 IST" duration-ms="2036" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.wakesmart.testcases.WSAutomationGroupRulesTest -->
      <class name="com.wakesmart.testcases.WSHomePageTest">
        <test-method is-config="true" signature="browserLaunch()[pri:0, instance:com.wakesmart.testcases.WSHomePageTest@740d2e78]" started-at="2023-05-03T18:46:19 IST" name="browserLaunch" finished-at="2023-05-03T18:46:45 IST" duration-ms="26045" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserLaunch -->
        <test-method signature="HomePageValidation()[pri:1, instance:com.wakesmart.testcases.WSHomePageTest@740d2e78]" started-at="2023-05-03T18:46:45 IST" name="HomePageValidation" finished-at="2023-05-03T18:47:08 IST" duration-ms="23194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HomePageValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.wakesmart.testcases.WSHomePageTest@740d2e78]" started-at="2023-05-03T18:47:08 IST" name="tearDown" finished-at="2023-05-03T18:47:27 IST" duration-ms="19531" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.wakesmart.testcases.WSHomePageTest -->
      <class name="com.wakesmart.testcases.WSAutomationAlertRulesTest">
        <test-method is-config="true" signature="browserLaunch()[pri:0, instance:com.wakesmart.testcases.WSAutomationAlertRulesTest@1b955cac]" started-at="2023-05-03T18:46:19 IST" name="browserLaunch" finished-at="2023-05-03T18:46:45 IST" duration-ms="26462" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserLaunch -->
        <test-method signature="newAutomationAlertRules()[pri:1, instance:com.wakesmart.testcases.WSAutomationAlertRulesTest@1b955cac]" started-at="2023-05-03T18:46:45 IST" name="newAutomationAlertRules" finished-at="2023-05-03T18:46:59 IST" duration-ms="14134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newAutomationAlertRules -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.wakesmart.testcases.WSAutomationAlertRulesTest@1b955cac]" started-at="2023-05-03T18:46:59 IST" name="tearDown" finished-at="2023-05-03T18:47:15 IST" duration-ms="16004" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.wakesmart.testcases.WSAutomationAlertRulesTest -->
      <class name="com.wakesmart.testcases.WSAutomationPolicyRules">
        <test-method is-config="true" signature="browserLaunch()[pri:0, instance:com.wakesmart.testcases.WSAutomationPolicyRules@72437d8d]" started-at="2023-05-03T18:46:19 IST" name="browserLaunch" finished-at="2023-05-03T18:46:41 IST" duration-ms="22247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserLaunch -->
        <test-method signature="newAutomationPolicyRules()[pri:1, instance:com.wakesmart.testcases.WSAutomationPolicyRules@72437d8d]" started-at="2023-05-03T18:46:41 IST" name="newAutomationPolicyRules" finished-at="2023-05-03T18:47:23 IST" duration-ms="41543" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- newAutomationPolicyRules -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.wakesmart.testcases.WSAutomationPolicyRules@72437d8d]" started-at="2023-05-03T18:47:23 IST" name="tearDown" finished-at="2023-05-03T18:47:26 IST" duration-ms="3888" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.wakesmart.testcases.WSAutomationPolicyRules -->
    </test> <!-- WakeSmart -->
  </suite> <!-- Suite -->
</testng-results>
