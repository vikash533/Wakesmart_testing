<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="OTS-LP-O-0237" failures="1" tests="30" name="com.wakesmart.testcases.HomePageTest" time="3.397" errors="0" timestamp="2023-03-29T20:18:57 IST" skipped="29">
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="validUserLogin" time="3.397">
    <failure message="The following asserts failed:
	expected [Successfully logged in.] but found []" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [Successfully logged in.] but found []
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:46)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:30)
at com.wakesmart.testcases.HomePageTest.validUserLogin(HomePageTest.java:69)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- validUserLogin -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="new_Policy_Verify">
    <skipped/>
  </testcase> <!-- new_Policy_Verify -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="manage_User">
    <skipped/>
  </testcase> <!-- manage_User -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="manage_Policies_AddNewScheme">
    <skipped/>
  </testcase> <!-- manage_Policies_AddNewScheme -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="managePolicies_Scheduled_Events">
    <skipped/>
  </testcase> <!-- managePolicies_Scheduled_Events -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="manage_Licences">
    <skipped/>
  </testcase> <!-- manage_Licences -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="reporting_DevicesVStime">
    <skipped/>
  </testcase> <!-- reporting_DevicesVStime -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="managePolicies">
    <skipped/>
  </testcase> <!-- managePolicies -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="reporting_Power_State_Report">
    <skipped/>
  </testcase> <!-- reporting_Power_State_Report -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="deleteAssignedPolicy">
    <skipped/>
  </testcase> <!-- deleteAssignedPolicy -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="Automation_PolicyRules">
    <skipped/>
  </testcase> <!-- Automation_PolicyRules -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="Settings">
    <skipped/>
  </testcase> <!-- Settings -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="manage_Device_Groups">
    <skipped/>
  </testcase> <!-- manage_Device_Groups -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="Automation_rule_Presence_verify">
    <skipped/>
  </testcase> <!-- Automation_rule_Presence_verify -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="reporting_DeviceTypebyPercentage">
    <skipped/>
  </testcase> <!-- reporting_DeviceTypebyPercentage -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="getAutomation_AlertRules">
    <skipped/>
  </testcase> <!-- getAutomation_AlertRules -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="reporting_Licence_Summary">
    <skipped/>
  </testcase> <!-- reporting_Licence_Summary -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="manageEditGroups">
    <skipped/>
  </testcase> <!-- manageEditGroups -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="logOutFunctionality">
    <skipped/>
  </testcase> <!-- logOutFunctionality -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="delete_UnAssigned_Policy">
    <skipped/>
  </testcase> <!-- delete_UnAssigned_Policy -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="assign_Policy_To_Sytstem">
    <skipped/>
  </testcase> <!-- assign_Policy_To_Sytstem -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="manage_Users_GroupPermission">
    <skipped/>
  </testcase> <!-- manage_Users_GroupPermission -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="manage_Automation">
    <skipped/>
  </testcase> <!-- manage_Automation -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="about">
    <skipped/>
  </testcase> <!-- about -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="assetInventory">
    <skipped/>
  </testcase> <!-- assetInventory -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="Unassign_Policy_To_Sytstem">
    <skipped/>
  </testcase> <!-- Unassign_Policy_To_Sytstem -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="reporting_Policy_Summary">
    <skipped/>
  </testcase> <!-- reporting_Policy_Summary -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="reporting_DeviceUsage">
    <skipped/>
  </testcase> <!-- reporting_DeviceUsage -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="reporting">
    <skipped/>
  </testcase> <!-- reporting -->
  <system-out/>
  <testcase classname="com.wakesmart.testcases.HomePageTest" name="manage_Reference">
    <skipped/>
  </testcase> <!-- manage_Reference -->
  <system-out/>
</testsuite> <!-- com.wakesmart.testcases.HomePageTest -->
